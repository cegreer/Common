//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vizistata.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Vizistata.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to an instance.
        /// </summary>
        internal static string AnInstance {
            get {
                return ResourceManager.GetString("AnInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length of the arguments must match the length of the types..
        /// </summary>
        internal static string ArgumentLengthDoesNotMatchTypeLengthMessage {
            get {
                return ResourceManager.GetString("ArgumentLengthDoesNotMatchTypeLengthMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a static.
        /// </summary>
        internal static string AStatic {
            get {
                return ResourceManager.GetString("AStatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; attribute is missing or empty..
        /// </summary>
        internal static string AttributeMissingFormat {
            get {
                return ResourceManager.GetString("AttributeMissingFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the nodes in the path contains invalid characters..
        /// </summary>
        internal static string CollectionContainsElementWithInvalidCharactersMessage {
            get {
                return ResourceManager.GetString("CollectionContainsElementWithInvalidCharactersMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the nodes other than the last node in the path specified is an empty string..
        /// </summary>
        internal static string CollectionContainsEmptyStringBeforeLastElementMessage {
            get {
                return ResourceManager.GetString("CollectionContainsEmptyStringBeforeLastElementMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The collection specified contains a null reference.  Null references are not allowed..
        /// </summary>
        internal static string CollectionContainsNullReferenceMessage {
            get {
                return ResourceManager.GetString("CollectionContainsNullReferenceMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The collection is empty.  It must contain at least 1 element..
        /// </summary>
        internal static string CollectionMayNotBeEmptyMessage {
            get {
                return ResourceManager.GetString("CollectionMayNotBeEmptyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration section type specified is not known..
        /// </summary>
        internal static string ConfigurationSectionTypeNotKnownMessage {
            get {
                return ResourceManager.GetString("ConfigurationSectionTypeNotKnownMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A constructor matching the arguments specified could not be found..
        /// </summary>
        internal static string ConstructorNotFoundMessage {
            get {
                return ResourceManager.GetString("ConstructorNotFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} trace log as of {1} at {2}.
        /// </summary>
        internal static string DefaultTraceListenerSubjectFormat {
            get {
                return ResourceManager.GetString("DefaultTraceListenerSubjectFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each domain label must contain at least one character..
        /// </summary>
        internal static string DomainLabelIsEmptyMessage {
            get {
                return ResourceManager.GetString("DomainLabelIsEmptyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both of the first-level domain label and second-level domain label are required.  One or both is not specified in the value provided..
        /// </summary>
        internal static string DomainNameHasTooFewLabelsMessage {
            get {
                return ResourceManager.GetString("DomainNameHasTooFewLabelsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of labels for a domain name is limited to 127.  There are too many sub-domain labels provided..
        /// </summary>
        internal static string DomainNameHasTooManyLabelsMessage {
            get {
                return ResourceManager.GetString("DomainNameHasTooManyLabelsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of characters for the domain name exceeds 253..
        /// </summary>
        internal static string DomainNameLengthTooLargeMessage {
            get {
                return ResourceManager.GetString("DomainNameLengthTooLargeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The domain of an e-mail address may not have two consecutive dots or periods..
        /// </summary>
        internal static string EmailAddressDomainContainsConsecutiveDotsMessage {
            get {
                return ResourceManager.GetString("EmailAddressDomainContainsConsecutiveDotsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The domain of an e-mail address may not end with a dot or period..
        /// </summary>
        internal static string EmailAddressDomainEndsWithDotMessage {
            get {
                return ResourceManager.GetString("EmailAddressDomainEndsWithDotMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length of the e-mail address&apos;s domain must be between 1 and 253 characters..
        /// </summary>
        internal static string EmailAddressDomainLengthInvalidMessage {
            get {
                return ResourceManager.GetString("EmailAddressDomainLengthInvalidMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The domain of the e-mail address contains one more more characters not defined by HealthGrades.EmailAddress.GetValidDomainCharacters()..
        /// </summary>
        internal static string EmailAddressDomainPartInvalidCharactersMessage {
            get {
                return ResourceManager.GetString("EmailAddressDomainPartInvalidCharactersMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The domain of an e-mail address may not start with a dot or period..
        /// </summary>
        internal static string EmailAddressDomainStartsWithDotMessage {
            get {
                return ResourceManager.GetString("EmailAddressDomainStartsWithDotMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An e-mail address must have exactly one @ symbol..
        /// </summary>
        internal static string EmailAddressHasTooManyPartsMessage {
            get {
                return ResourceManager.GetString("EmailAddressHasTooManyPartsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When combined with the domain, the local-part and domain cannot exceed 254 characters..
        /// </summary>
        internal static string EmailAddressLocalPartAndDomainTooLongMessage {
            get {
                return ResourceManager.GetString("EmailAddressLocalPartAndDomainTooLongMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The local-part of an e-mail address may not have two consecutive dots or periods..
        /// </summary>
        internal static string EmailAddressLocalPartContainsConsecutiveDotsMessage {
            get {
                return ResourceManager.GetString("EmailAddressLocalPartContainsConsecutiveDotsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The local-part of an e-mail address may not end with a dot or period..
        /// </summary>
        internal static string EmailAddressLocalPartEndsWithDotMessage {
            get {
                return ResourceManager.GetString("EmailAddressLocalPartEndsWithDotMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The local-part of the e-mail address contains one more more characters not defined by HealthGrades.EmailAddress.GetValidLocalPartCharacters()..
        /// </summary>
        internal static string EmailAddressLocalPartInvalidCharactersMessage {
            get {
                return ResourceManager.GetString("EmailAddressLocalPartInvalidCharactersMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length of the e-mail address&apos;s local-part must be between 1 and 64 characters..
        /// </summary>
        internal static string EmailAddressLocalPartLengthInvalidMessage {
            get {
                return ResourceManager.GetString("EmailAddressLocalPartLengthInvalidMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The local-part of an e-mail address may not start with a dot or period..
        /// </summary>
        internal static string EmailAddressLocalPartStartsWithDotMessage {
            get {
                return ResourceManager.GetString("EmailAddressLocalPartStartsWithDotMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The listener did not log to an event log.  Check that the event log exists and that the application has permission to access the event log..
        /// </summary>
        internal static string EventLogTraceListenerLoggingErrorMessage {
            get {
                return ResourceManager.GetString("EventLogTraceListenerLoggingErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to field.
        /// </summary>
        internal static string Field {
            get {
                return ResourceManager.GetString("Field", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field is read-only..
        /// </summary>
        internal static string FieldIsReadOnlyMessage {
            get {
                return ResourceManager.GetString("FieldIsReadOnlyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A file name may not have any characters as defined by Path.GetInvalidFileNameChars()..
        /// </summary>
        internal static string FileNameContainsInvalidFileNameCharactersMessage {
            get {
                return ResourceManager.GetString("FileNameContainsInvalidFileNameCharactersMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A file name may not have any characters as defined by Path.GetInvalidPathChars()..
        /// </summary>
        internal static string FileNameContainsInvalidPathCharactersMessage {
            get {
                return ResourceManager.GetString("FileNameContainsInvalidPathCharactersMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;fromAddress&apos; attribute has a value that is not a valid e-mail address: .
        /// </summary>
        internal static string FromAddressAttributeInvalidPrefix {
            get {
                return ResourceManager.GetString("FromAddressAttributeInvalidPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input stream is not readable..
        /// </summary>
        internal static string InputStreamNotReadableMessage {
            get {
                return ResourceManager.GetString("InputStreamNotReadableMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A character ({0}) was found at position {1} that is invalid..
        /// </summary>
        internal static string InvalidCharacterAtSpecifiedPositionFormat {
            get {
                return ResourceManager.GetString("InvalidCharacterAtSpecifiedPositionFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;isBodyHtml&apos; attribute has a value that could not be parsed as a boolean..
        /// </summary>
        internal static string IsBodyHtmlAttributeInvalidMessage {
            get {
                return ResourceManager.GetString("IsBodyHtmlAttributeInvalidMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key specified already exists in the query..
        /// </summary>
        internal static string KeyExistsInQueryMessage {
            get {
                return ResourceManager.GetString("KeyExistsInQueryMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The separator could not be inferred because no valid separator exists in the path..
        /// </summary>
        internal static string LackOfSeparatorPreventsInferrenceMessage {
            get {
                return ResourceManager.GetString("LackOfSeparatorPreventsInferrenceMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A listener ({0}) could not be loaded for the following reason: {1}{2}See the inner exception for more details..
        /// </summary>
        internal static string ListenerLoadErrorFormat {
            get {
                return ResourceManager.GetString("ListenerLoadErrorFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type specified ({0}) for the listener ({1}) is not valid or does not derive from {2}..
        /// </summary>
        internal static string ListenerTypeInvalidFormat {
            get {
                return ResourceManager.GetString("ListenerTypeInvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No type was specified for the listener ({0})..
        /// </summary>
        internal static string ListenerTypeMissingFormat {
            get {
                return ResourceManager.GetString("ListenerTypeMissingFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field specified {0} does not exist on the type as {1} {2}..
        /// </summary>
        internal static string MemberNotOnTypeFormat {
            get {
                return ResourceManager.GetString("MemberNotOnTypeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message queue is not available for writing.  Only writeable message queues may be used..
        /// </summary>
        internal static string MessageQueueIsNotWriteableMessage {
            get {
                return ResourceManager.GetString("MessageQueueIsNotWriteableMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A method matching the arguments specified could not be found..
        /// </summary>
        internal static string MethodNotFoundMessage {
            get {
                return ResourceManager.GetString("MethodNotFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;path&apos; attribute has a value that does not point to a valid MSMQ queue: .
        /// </summary>
        internal static string MsmqPathInvalidPrefix {
            get {
                return ResourceManager.GetString("MsmqPathInvalidPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The separator could not be inferred because multiple valid separators exist in the path..
        /// </summary>
        internal static string MultipleSeparatorsPreventsInferrenceMessage {
            get {
                return ResourceManager.GetString("MultipleSeparatorsPreventsInferrenceMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No trace listeners other than the default exist within the current configuration..
        /// </summary>
        internal static string NoTraceListenersInConfigFileMessage {
            get {
                return ResourceManager.GetString("NoTraceListenersInConfigFileMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output stream is not writeable..
        /// </summary>
        internal static string OutputStreamNotWriteableMessage {
            get {
                return ResourceManager.GetString("OutputStreamNotWriteableMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path contains invalid characters..
        /// </summary>
        internal static string PathContainsInvalidCharactersMessage {
            get {
                return ResourceManager.GetString("PathContainsInvalidCharactersMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path for the type specified is already known..
        /// </summary>
        internal static string PathForTypeAlreadyKnownMessage {
            get {
                return ResourceManager.GetString("PathForTypeAlreadyKnownMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Performance scope &apos;{0}.{1}&apos; ended at {2} with a duration of {3}..
        /// </summary>
        internal static string PerformanceLoggingScopeFinishFormat {
            get {
                return ResourceManager.GetString("PerformanceLoggingScopeFinishFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Performance scope &apos;{0}.{1}&apos; started at {2}..
        /// </summary>
        internal static string PerformanceLoggingScopeStartFormat {
            get {
                return ResourceManager.GetString("PerformanceLoggingScopeStartFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The area code must contain exactly three letters and/or numbers..
        /// </summary>
        internal static string PhoneNumberAreaCodeLengthInvalidMessage {
            get {
                return ResourceManager.GetString("PhoneNumberAreaCodeLengthInvalidMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A phone number may only contain letters and numbers..
        /// </summary>
        internal static string PhoneNumberContainsInvalidCharactersMessage {
            get {
                return ResourceManager.GetString("PhoneNumberContainsInvalidCharactersMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The country code must be a valid number for a country..
        /// </summary>
        internal static string PhoneNumberCountryCodeInvalidMessage {
            get {
                return ResourceManager.GetString("PhoneNumberCountryCodeInvalidMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The subscriber groups may not contain a null reference..
        /// </summary>
        internal static string PhoneNumberSubscriberGroupsContainsNullMessage {
            get {
                return ResourceManager.GetString("PhoneNumberSubscriberGroupsContainsNullMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The total number of digits in the subscriber groups must be at least 7 and must not be greater that 15..
        /// </summary>
        internal static string PhoneNumberSubscriberGroupsDigitsLengthInvalidMessage {
            get {
                return ResourceManager.GetString("PhoneNumberSubscriberGroupsDigitsLengthInvalidMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There must be at least one subscriber number group..
        /// </summary>
        internal static string PhoneNumberSubscriberGroupsInvalidLengthMessage {
            get {
                return ResourceManager.GetString("PhoneNumberSubscriberGroupsInvalidLengthMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Currently, only the United States of America (1) is supported..
        /// </summary>
        internal static string PhoneNumberSupportsUSOnly {
            get {
                return ResourceManager.GetString("PhoneNumberSupportsUSOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A United States phone number must contain at least 10 digits..
        /// </summary>
        internal static string PhoneNumberUnitedStatesNumberHasInvalidLengthMessage {
            get {
                return ResourceManager.GetString("PhoneNumberUnitedStatesNumberHasInvalidLengthMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to property.
        /// </summary>
        internal static string Property {
            get {
                return ResourceManager.GetString("Property", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property is read-only..
        /// </summary>
        internal static string PropertyIsReadOnlyMessage {
            get {
                return ResourceManager.GetString("PropertyIsReadOnlyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property is write-only..
        /// </summary>
        internal static string PropertyIsWriteOnlyMessage {
            get {
                return ResourceManager.GetString("PropertyIsWriteOnlyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} configuration is invalid:.
        /// </summary>
        internal static string ProviderInvalidFormat {
            get {
                return ResourceManager.GetString("ProviderInvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provider specified is not of the type {0}..
        /// </summary>
        internal static string ProviderTypeIncorrectFormat {
            get {
                return ResourceManager.GetString("ProviderTypeIncorrectFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path contains a separator that is not supported by this instance..
        /// </summary>
        internal static string SeparatorNotSupportedMessage {
            get {
                return ResourceManager.GetString("SeparatorNotSupportedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The separator specified is not valid..
        /// </summary>
        internal static string SeparatorNotValidMessage {
            get {
                return ResourceManager.GetString("SeparatorNotValidMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value contains 0 characters.  It must contain at least one character..
        /// </summary>
        internal static string StringMayNotBeEmptyMessage {
            get {
                return ResourceManager.GetString("StringMayNotBeEmptyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The listener did not log to a text file.  Check the path to the file exists and that the application has permission to create/modify files in that directory..
        /// </summary>
        internal static string TextWriterTraceListenerLoggingErrorMessage {
            get {
                return ResourceManager.GetString("TextWriterTraceListenerLoggingErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;toAddresses&apos; attribute has a value that does not contain valid e-mail addresses: .
        /// </summary>
        internal static string ToAddressesAttributeInvalidPrefix {
            get {
                return ResourceManager.GetString("ToAddressesAttributeInvalidPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value specified is empty or contains only white-space characters.  At least one non-white-space character is required..
        /// </summary>
        internal static string TrimmedValueIsEmptyMessage {
            get {
                return ResourceManager.GetString("TrimmedValueIsEmptyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type specified is abstract.  Abstract types are not allowed..
        /// </summary>
        internal static string TypeMayNotBeAbstractMessage {
            get {
                return ResourceManager.GetString("TypeMayNotBeAbstractMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type does not derive from {0}.  Only types that derive from {0} are allowed..
        /// </summary>
        internal static string TypeNeedsToHaveSpecificBaseClassFormat {
            get {
                return ResourceManager.GetString("TypeNeedsToHaveSpecificBaseClassFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value specified is empty.  Empty value are not allowed..
        /// </summary>
        internal static string ValueIsEmptyMessage {
            get {
                return ResourceManager.GetString("ValueIsEmptyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length of the value specified exceeds the maximum length of {0}..
        /// </summary>
        internal static string ValueLengthExceededFormat {
            get {
                return ResourceManager.GetString("ValueLengthExceededFormat", resourceCulture);
            }
        }
    }
}
